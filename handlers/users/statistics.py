from aiogram import types
from loader import dp
from keyboards.inline.statistics_keyboard import all_statistics_keyboards, mini_games_statistics_keyboards, \
    back_from_mini_game_statistics_keyboard
from dataBase.base import add_last_message, count_all_bot_users, count_active_bot_users, count_recently_bot_users, \
    count_time_in_bot, get_search_emoji_on_field, existe_in_db, add_mini_game_search_emoji_on_field_in_data_base, \
    get_connect_in_order


@dp.message_handler(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_all_statistics(message: types.Message):
    add_last_message(message.chat.id)
    msg = "üìä <b><u>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</u></b>"
    msg += f"\n\nüë®‚Äçüë®‚Äçüë¶‚Äçüë¶ –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: <b><i>{count_all_bot_users()} —á–µ–ª.</i></b>"
    msg += f"\n‚òÄÔ∏è –ò–≥—Ä–∞–ª–∏ –Ω–µ –±–æ–ª–µ–µ —Å—É—Ç–æ–∫ –Ω–∞–∑–∞–¥: <b><i>{count_active_bot_users()} —á–µ–ª.</i></b>"
    msg += f"\nüïê –ò–≥—Ä–∞–ª–∏ –Ω–µ –±–æ–ª–µ–µ —á–∞—Å–∞ –Ω–∞–∑–∞–¥: <b><i>{count_recently_bot_users()} —á–µ–ª.</i></b>"
    await message.answer(msg, reply_markup=all_statistics_keyboards)


@dp.callback_query_handler(text="–°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–∏–Ω–∏-–∏–≥—Ä")
async def show_mini_games(call: types.CallbackQuery):
    add_last_message(call.message.chat.id)
    await call.answer()
    msg = "–í—ã–±–∏—Ä–µ—Ç–µ –º–∏–Ω–∏-–∏–≥—Ä—É: ‚¨á"
    try:
        await call.message.edit_text(msg, reply_markup=mini_games_statistics_keyboards)
    except Exception: pass


@dp.callback_query_handler(text="stata_search_emoji")
async def show_search_emoji_statistics(call: types.CallbackQuery):
    add_last_message(call.message.chat.id)
    await call.answer()
    tab = "\t" * 2
    data = get_search_emoji_on_field(call.message.chat.id)
    msg = "\nüîé <b><u>–ù–∞–π–¥–∏ —ç–º–æ–¥–∑–∏</u></b>"
    msg += "\n\nüèÜ <b>–†–µ–∫–æ—Ä–¥ –∏–≥—Ä—ã —Å —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–ª—è</b>"
    msg += f"\n{tab}{tab}‚ñ´Ô∏è3 –Ω–∞ 3: <b><i>—ç—Ç–∞–ø {data[3]}</i></b>"
    msg += f"\n{tab}{tab}‚óΩÔ∏è5 –Ω–∞ 5: <b><i>—ç—Ç–∞–ø {data[4]}</i></b>"
    msg += f"\n{tab}{tab}‚óªÔ∏è7 –Ω–∞ 7: <b><i>—ç—Ç–∞–ø {data[5]}</i></b>"
    msg += "\nüåê <b>–í—Å–µ–≥–æ –ø—Ä–æ–π–¥–µ–Ω–Ω—ã—Ö —Å —Ä–∞–∑–º–µ—Ä–æ–º –ø–æ–ª—è</b>"
    msg += f"\n{tab}{tab}‚ñ´Ô∏è3 –Ω–∞ 3: <b><i>{data[6]} —ç—Ç–∞–ø.</i></b>"
    msg += f"\n{tab}{tab}‚óΩÔ∏è5 –Ω–∞ 5: <b><i>{data[7]} —ç—Ç–∞–ø.</i></b>"
    msg += f"\n{tab}{tab}‚óªÔ∏è7 –Ω–∞ 7: <b><i>{data[8]} —ç—Ç–∞–ø.</i></b>"
    try:
        await call.message.edit_text(msg, reply_markup=back_from_mini_game_statistics_keyboard)
    except Exception: pass


@dp.callback_query_handler(text="stata_connect_in_order")
async def show_connect_in_order_statistics(call: types.CallbackQuery):
    add_last_message(call.message.chat.id)
    await call.answer()
    msg = "üî¢ <b><u>–°–æ–µ–¥–∏–Ω–∏—Ç—å –ø–æ –ø–æ—Ä—è–¥–∫—É</u></b>"
    msg += f"\n\n<b>üïπ –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–∞–≤–∏–ª—å–Ω—ã—Ö –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç–µ–π: <i>{get_connect_in_order(call.message.chat.id)[2]} –∏–≥—Ä</i></b>"
    try:
        await call.message.edit_text(msg, reply_markup=back_from_mini_game_statistics_keyboard)
    except Exception: pass


@dp.callback_query_handler(text="back_to_mini_game_statistics")
async def back_to_minigames_statistics(call: types.CallbackQuery):
    add_last_message(call.message.chat.id)
    await call.answer()
    try:
        await show_mini_games(call)
    except Exception: pass


@dp.callback_query_handler(text="back_to_statistics")
async def back_to_all_statistics(call: types.CallbackQuery):
    add_last_message(call.message.chat.id)
    await call.answer()
    msg = "üìä <b><u>–û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞</u></b>"
    msg += f"\n\nüë®‚Äçüë®‚Äçüë¶‚Äçüë¶ –í—Å–µ–≥–æ –∏–≥—Ä–æ–∫–æ–≤: <b><i>{count_all_bot_users()} —á–µ–ª.</i></b>"
    msg += f"\n‚òÄÔ∏è –ò–≥—Ä–∞–ª–∏ –Ω–µ –±–æ–ª–µ–µ —Å—É—Ç–æ–∫ –Ω–∞–∑–∞–¥: <b><i>{count_active_bot_users()} —á–µ–ª.</i></b>"
    msg += f"\nüïê –ò–≥—Ä–∞–ª–∏ –Ω–µ –±–æ–ª–µ–µ —á–∞—Å–∞ –Ω–∞–∑–∞–¥: <b><i>{count_recently_bot_users()} —á–µ–ª.</i></b>"
    try:
        await call.message.edit_text(msg, reply_markup=all_statistics_keyboards)
    except Exception: pass